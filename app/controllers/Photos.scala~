
package controllers

import play.api._
import play.api.mvc._

import org.squeryl.PrimitiveTypeMode._

import play.api.libs.ws._
import scala.concurrent.Future
import play.libs.Json
import scala.concurrent._
import scala.concurrent.duration._
import scala.concurrent.Await
import play.api.libs.concurrent.Execution.Implicits._

import play.api.libs.json._
import play.api.libs.functional.syntax._
import org.apache.commons.io.FileUtils

import models.{Photo, Library}
import controllers.lib.{Withs, Current}

object Photos extends Controller  {

  def getPhoto(id: Long) = Withs.withUserCreated  { request => {
    Photo.getPhoto(id) match {
      case Some(s) => {
	Ok(s.blob.get).as("image/png")
      }
      case None => Ok("")
    }
  } }

  def doUpload = Withs.WithFacebookValidation { request => { 
    println(Current.params.getFile("picture"))
    Current.params.getData("picture") match {
      case Some(arr) => {
	val id = Current.params.get("albumID").get.toLong    
	val photo = new Photo(Some(arr), id)
	Library.photos.insert(photo)
      }
      case None => {
	println("nope here")
      }
    }

    Ok("")
  } }
}


/*
*/


