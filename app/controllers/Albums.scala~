package controllers

import play.api._
import play.api.mvc._
import models._

import models._
import org.squeryl.PrimitiveTypeMode._
import controllers.lib.{Withs, FBApiCalls}


import play.api.libs.ws._
import scala.concurrent.Future
import play.libs.Json
import scala.concurrent._
import scala.concurrent.duration._
import scala.concurrent.Await
import play.api.libs.concurrent.Execution.Implicits._

import play.api.libs.json._
import play.api.libs.functional.syntax._

import controllers.lib._

object Albums extends Controller {

 def createAlbum() = Withs.withUserCreated { implicit request => {
   println(Current.user.fullname) 
   Ok("")
  } }


  def getAlbums() = Withs.withUserCreated { implicit request => {
    val user = Current.user
    val json = JsObject(AlbumUserLink.getAlbumsForUser(user).map
			(a => "name" -> JsString(a.get.name)).toSeq)
    
    Ok(json)
  } }
  
    
}
